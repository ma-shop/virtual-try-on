{"version":3,"sources":["ColorUi.tsx"],"names":["React","ScrollView","StyleSheet","Text","View","Touchable","ColorUi","props","options","value","onPress","styles","container","map","color","sku","name","option","colorLabel","selectedLabel","circle","backgroundColor","selected","create","flexGrow","marginTop","paddingLeft","width","height","borderRadius","borderWidth","alignSelf","margin","fontSize","marginBottom","borderColor","fontWeight","alignItems","flex","paddingBottom"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,IAAjC,EAAuCC,IAAvC,QAAmD,cAAnD;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAYA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAsC;AACnD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA8BH,KAA9B,aAA8BA,KAA9B,cAA8BA,KAA9B,GAAuC,EAA7C;AAEA,sBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEI,MAAM,CAACC,SAA1B;AAAqC,IAAA,UAAU;AAA/C,KACGJ,OADH,aACGA,OADH,uBACGA,OAAO,CAAEK,GAAT,CAAa;AAAA,QAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,GAAT;AAAcC,MAAAA;AAAd,KAAD;AAAA,wBACZ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAG,gBAAeD,GAAI,IAAGD,KAAM,EAAxC;AAA2C,MAAA,KAAK,EAAEH,MAAM,CAACM;AAAzD,oBACE,oBAAC,IAAD;AACE,MAAA,KAAK,EACHR,KAAK,KAAKK,KAAV,GACI,CAACH,MAAM,CAACO,UAAR,EAAoBP,MAAM,CAACQ,aAA3B,CADJ,GAEI,CAACR,MAAM,CAACO,UAAR;AAJR,OAOGJ,KAPH,CADF,eAUE,oBAAC,SAAD;AACE,MAAA,KAAK,EACHL,KAAK,KAAKK,KAAV,GACI,CAACH,MAAM,CAACS,MAAR,EAAgB;AAAEC,QAAAA,eAAe,EAAEP;AAAnB,OAAhB,EAA4CH,MAAM,CAACW,QAAnD,CADJ,GAEI,CAACX,MAAM,CAACS,MAAR,EAAgB;AAAEC,QAAAA,eAAe,EAAEP;AAAnB,OAAhB,CAJR;AAME,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC;AAAEI,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAD;AANxB,MAVF,CADY;AAAA,GAAb,CADH,CADF;AAyBD;AAED,MAAML,MAAM,GAAGT,UAAU,CAACqB,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,QAAQ,EAAE,CADD;AAETC,IAAAA,SAAS,EAAE,EAFF;AAGTC,IAAAA,WAAW,EAAE;AAHJ,GADoB;AAM/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,YAAY,EAAE,KAAK,CAHb;AAINC,IAAAA,WAAW,EAAE,CAJP;AAKNC,IAAAA,SAAS,EAAE,UALL;AAMNC,IAAAA,MAAM,EAAE;AANF,GANuB;AAc/Bd,EAAAA,UAAU,EAAE;AACVe,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,YAAY,EAAE;AAFJ,GAdmB;AAkB/BZ,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,WAAW,EAAE,CADL;AAERK,IAAAA,WAAW,EAAE;AAFL,GAlBqB;AAsB/BhB,EAAAA,aAAa,EAAE;AACbiB,IAAAA,UAAU,EAAE;AADC,GAtBgB;AAyB/BnB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,UAAU,EAAE,QADN;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNC,IAAAA,aAAa,EAAE;AAHT;AAzBuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport { Touchable } from './Touchable';\n\ntype ColorUiProps = {\n  options: {\n    color: string;\n    sku?: string;\n    name?: string;\n  }[];\n  value: string;\n  onPress: Function;\n};\n\nexport default function ColorUi(props: ColorUiProps) {\n  const { options, value, onPress } = props ?? {};\n\n  return (\n    <ScrollView style={styles.container} horizontal>\n      {options?.map(({ color, sku, name }) => (\n        <View key={`color-option-${sku}-${color}`} style={styles.option}>\n          <Text\n            style={\n              value === color\n                ? [styles.colorLabel, styles.selectedLabel]\n                : [styles.colorLabel]\n            }\n          >\n            {color}\n          </Text>\n          <Touchable\n            style={\n              value === color\n                ? [styles.circle, { backgroundColor: color }, styles.selected]\n                : [styles.circle, { backgroundColor: color }]\n            }\n            onPress={() => onPress({ color, name })}\n          />\n        </View>\n      ))}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 0,\n    marginTop: 15,\n    paddingLeft: 10,\n  },\n  circle: {\n    width: 75,\n    height: 75,\n    borderRadius: 75 / 2,\n    borderWidth: 0,\n    alignSelf: 'flex-end',\n    margin: 5,\n  },\n  colorLabel: {\n    fontSize: 15,\n    marginBottom: 5,\n  },\n  selected: {\n    borderWidth: 3,\n    borderColor: '#000000',\n  },\n  selectedLabel: {\n    fontWeight: 'bold',\n  },\n  option: {\n    alignItems: 'center',\n    flex: 1,\n    paddingBottom: 10,\n  },\n});\n"]}